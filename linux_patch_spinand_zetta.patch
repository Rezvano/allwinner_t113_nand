diff --git a/arch/arm/boot/dts/allwinner/Makefile b/arch/arm/boot/dts/allwinner/Makefile
index 296be33ec..69d4085c6 100644
--- a/arch/arm/boot/dts/allwinner/Makefile
+++ b/arch/arm/boot/dts/allwinner/Makefile
@@ -254,6 +254,7 @@ dtb-$(CONFIG_MACH_SUN8I) += \
 	sun8i-s3-lichee-zero-plus.dtb \
 	sun8i-s3-pinecube.dtb \
 	sun8i-t113s-mangopi-mq-r-t113.dtb \
+	sun8i-t113s-mangopi-mq-r-t113-spinand.dtb \
 	sun8i-t3-cqa3t-bv3.dtb \
 	sun8i-v3-sl631-imx179.dtb \
 	sun8i-v3s-licheepi-zero.dtb \
diff --git a/arch/arm/boot/dts/allwinner/sun8i-t113s-mangopi-mq-r-t113-spinand.dts b/arch/arm/boot/dts/allwinner/sun8i-t113s-mangopi-mq-r-t113-spinand.dts
new file mode 100644
index 000000000..95de389b8
--- /dev/null
+++ b/arch/arm/boot/dts/allwinner/sun8i-t113s-mangopi-mq-r-t113-spinand.dts
@@ -0,0 +1,69 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+// Copyright (C) 2022 Arm Ltd.
+
+#include <dt-bindings/interrupt-controller/irq.h>
+
+/dts-v1/;
+
+#include "sun8i-t113s.dtsi"
+#include "sunxi-d1s-t113-mangopi-mq-r.dtsi"
+
+/ {
+	model = "MangoPi MQ-R-T113 spinand";
+	compatible = "widora,mangopi-mq-r-t113", "allwinner,sun8i-t113s";
+
+	aliases {
+		ethernet0 = &rtl8189ftv;
+	};
+};
+
+&cpu0 {
+	cpu-supply = <&reg_vcc_core>;
+};
+
+&cpu1 {
+	cpu-supply = <&reg_vcc_core>;
+};
+
+&mmc1 {
+	rtl8189ftv: wifi@1 {
+		reg = <1>;
+		interrupt-parent = <&pio>;
+		interrupts = <6 10 IRQ_TYPE_LEVEL_LOW>; /* PG10 = WL_WAKE_AP */
+		interrupt-names = "host-wake";
+	};
+};
+
+&spi0 {
+	status = "okay";
+
+	flash@0 {
+		compatible = "spi-nand";
+		reg = <0x00>;
+
+		partitions {
+			compatible = "fixed-partitions";
+			#address-cells = <0x01>;
+			#size-cells = <0x01>;
+
+			partition@0 {
+				label = "awboot";
+				reg = <0x00 0x20000>;
+			};
+
+			partition@40000 {
+				label = "dtb";
+				reg = <0x40000 0x20000>;
+			};
+
+			partition@80000 {
+				label = "kernel";
+				reg = <0x80000 0x800000>;
+			};
+			partition@1000000 {
+				label = "rootfs";
+				reg = <0x1000000 0x7000000>;
+			};
+		};
+	};
+};
\ No newline at end of file
diff --git a/drivers/mtd/nand/spi/Makefile b/drivers/mtd/nand/spi/Makefile
index cd8b66bf7..26172cef5 100644
--- a/drivers/mtd/nand/spi/Makefile
+++ b/drivers/mtd/nand/spi/Makefile
@@ -1,4 +1,4 @@
 # SPDX-License-Identifier: GPL-2.0
 spinand-objs := core.o alliancememory.o ato.o esmt.o gigadevice.o macronix.o
-spinand-objs += micron.o paragon.o toshiba.o winbond.o xtx.o
+spinand-objs += micron.o paragon.o toshiba.o winbond.o xtx.o zetta.o
 obj-$(CONFIG_MTD_SPI_NAND) += spinand.o
diff --git a/drivers/mtd/nand/spi/core.c b/drivers/mtd/nand/spi/core.c
index cd21bf8f2..61f54f161 100644
--- a/drivers/mtd/nand/spi/core.c
+++ b/drivers/mtd/nand/spi/core.c
@@ -947,6 +947,7 @@ static const struct spinand_manufacturer *spinand_manufacturers[] = {
 	&toshiba_spinand_manufacturer,
 	&winbond_spinand_manufacturer,
 	&xtx_spinand_manufacturer,
+	&zetta_spinand_manufacturer,
 };
 
 static int spinand_manufacturer_match(struct spinand_device *spinand,
diff --git a/drivers/mtd/nand/spi/zetta.c b/drivers/mtd/nand/spi/zetta.c
new file mode 100644
index 000000000..0a1590b83
--- /dev/null
+++ b/drivers/mtd/nand/spi/zetta.c
@@ -0,0 +1,114 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2019 Jeff Kletsky
+ *
+ * Author: Jeff Kletsky <git-commits@allycomm.com>
+ */
+
+#include <linux/device.h>
+#include <linux/kernel.h>
+#include <linux/mtd/spinand.h>
+
+#define SPINAND_MFR_ZETTA 0xBA
+
+#define ZETTA_STATUS_ECC_BITMASK (3 << 4)
+
+#define ZETTA_STATUS_ECC_NONE_DETECTED (0 << 4)
+#define ZETTA_STATUS_ECC_1_7_CORRECTED (1 << 4)
+#define ZETTA_STATUS_ECC_ERRORED (2 << 4)
+#define ZETTA_STATUS_ECC_8_ERRORED (3 << 4)
+
+static SPINAND_OP_VARIANTS(
+	read_cache_variants,
+	SPINAND_PAGE_READ_FROM_CACHE_QUADIO_OP(0, 2, NULL, 0),
+	SPINAND_PAGE_READ_FROM_CACHE_X4_OP(0, 1, NULL, 0),
+	SPINAND_PAGE_READ_FROM_CACHE_DUALIO_OP(0, 1, NULL, 0),
+	SPINAND_PAGE_READ_FROM_CACHE_X2_OP(0, 1, NULL, 0),
+	SPINAND_PAGE_READ_FROM_CACHE_OP(true, 0, 1, NULL, 0),
+	SPINAND_PAGE_READ_FROM_CACHE_OP(false, 0, 1, NULL, 0));
+
+static SPINAND_OP_VARIANTS(write_cache_variants,
+			   SPINAND_PROG_LOAD_X4(true, 0, NULL, 0),
+			   SPINAND_PROG_LOAD(true, 0, NULL, 0));
+
+static SPINAND_OP_VARIANTS(update_cache_variants,
+			   SPINAND_PROG_LOAD_X4(false, 0, NULL, 0),
+			   SPINAND_PROG_LOAD(false, 0, NULL, 0));
+
+static int zetta_ooblayout_ecc(struct mtd_info *mtd, int section,
+			       struct mtd_oob_region *region)
+{
+	if (section > 3)
+		return -ERANGE;
+
+	region->offset = 6 + (15 * section); /* 4 BBM + 2 user bytes */
+	region->length = 13;
+
+	return 0;
+}
+
+static int zetta_ooblayout_free(struct mtd_info *mtd, int section,
+				struct mtd_oob_region *region)
+{
+	if (section > 4)
+		return -ERANGE;
+
+	if (section == 4) {
+		region->offset = 64;
+		region->length = 64;
+	} else {
+		region->offset = 4 + (15 * section);
+		region->length = 2;
+	}
+
+	return 0;
+}
+
+static int zetta_ecc_get_status(struct spinand_device *spinand, u8 status)
+{
+	switch (status & ZETTA_STATUS_ECC_BITMASK) {
+	case ZETTA_STATUS_ECC_NONE_DETECTED:
+		return 0;
+
+	case ZETTA_STATUS_ECC_1_7_CORRECTED:
+		return 7; /* Return upper limit by convention */
+
+	case ZETTA_STATUS_ECC_8_ERRORED:
+		return 8;
+
+	case ZETTA_STATUS_ECC_ERRORED:
+		return -EBADMSG;
+
+	default:
+		break;
+	}
+
+	return -EINVAL;
+}
+
+static const struct mtd_ooblayout_ops zetta_ooblayout = {
+	.ecc = zetta_ooblayout_ecc,
+	.free = zetta_ooblayout_free,
+};
+
+static const struct spinand_info zetta_spinand_table[] = {
+	SPINAND_INFO("ZD35Q1GC-IB",
+		     SPINAND_ID(SPINAND_READID_METHOD_OPCODE_ADDR, 0x71),
+		     NAND_MEMORG(1, 2048, 64, 64, 1024, 21, 1, 1, 1),
+		     NAND_ECCREQ(4, 512),
+		     SPINAND_INFO_OP_VARIANTS(&read_cache_variants,
+					      &write_cache_variants,
+					      &update_cache_variants),
+		     0,
+		     SPINAND_ECCINFO(&zetta_ooblayout, zetta_ecc_get_status)),
+};
+
+static const struct spinand_manufacturer_ops zetta_spinand_manuf_ops = {};
+
+const struct spinand_manufacturer zetta_spinand_manufacturer = {
+	.id = SPINAND_MFR_ZETTA,
+	.name = "ZETTA",
+	.chips = zetta_spinand_table,
+	.nchips = ARRAY_SIZE(zetta_spinand_table),
+	.ops = &zetta_spinand_manuf_ops,
+};
diff --git a/include/linux/mtd/spinand.h b/include/linux/mtd/spinand.h
index 5c2ccc649..b1db057a0 100644
--- a/include/linux/mtd/spinand.h
+++ b/include/linux/mtd/spinand.h
@@ -270,7 +270,7 @@ extern const struct spinand_manufacturer paragon_spinand_manufacturer;
 extern const struct spinand_manufacturer toshiba_spinand_manufacturer;
 extern const struct spinand_manufacturer winbond_spinand_manufacturer;
 extern const struct spinand_manufacturer xtx_spinand_manufacturer;
-
+extern const struct spinand_manufacturer zetta_spinand_manufacturer;
 /**
  * struct spinand_op_variants - SPI NAND operation variants
  * @ops: the list of variants for a given operation
